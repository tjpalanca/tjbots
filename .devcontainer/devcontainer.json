{
    "image": "mcr.microsoft.com/devcontainers/python:3.12-bookworm",
    "features": {
        "ghcr.io/va-h/devcontainers-features/uv:1": {},
        "ghcr.io/devcontainers/features/node:1": {},
        "ghcr.io/rocker-org/devcontainer-features/quarto-cli:1": {},
        "ghcr.io/devcontainers/features/docker-in-docker:2": {},
        "ghcr.io/itsmechlark/features/1password:1": {},
        "ghcr.io/devcontainers/features/github-cli:1": {}
    },
    "mounts": [
        {
            "source": "devcontainer-cache",
            "target": "/home/vscode/.cache",
            "type": "volume"
        }
    ],
    "containerUser": "vscode",
    "containerEnv": {
        // {uv} settings
        "UV_SYSTEM_PYTHON": "1",
        "UV_LINK_MODE": "copy",
        // If the devcontainer is started locally, otherwise Codespaces supplies it directly
        "OP_SERVICE_ACCOUNT_TOKEN": "${localEnv:DEVCONTAINER_OP_SERVICE_ACCOUNT_TOKEN}"
    },
    "postCreateCommand": "make create",
    "postStartCommand": "make start",
    "waitFor": "postCreateCommand",
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-azuretools.vscode-containers",
                "Posit.shiny",
                "ms-toolsai.jupyter",
                "GitHub.vscode-pull-request-github",
                "quarto.quarto",
                "charliermarsh.ruff",
                "tamasfe.even-better-toml",
                "github.vscode-github-actions",
                "-ms-python.autopep8",
                "-ms-azuretools.vscode-docker"
            ],
            "settings": {
                // Fix something in positron
                "files.enableTrash": false,
                // Defaults matching what's in the devcontainer
                "python.defaultInterpreterPath": ".venv/bin/python",
                "terminal.integrated.defaultProfile.linux": "zsh",
                // Handling of port forwarding for shiny
                "remote.autoForwardPorts": true,
                "remote.autoForwardPortsSource": "process",
                "remote.autoForwardPortsFallback": 0,
                "remote.restoreForwardedPorts": false,
                // Type checking for shiny
                "python.analysis.typeCheckingMode": "basic",
                "python.analysis.diagnosticSeverityOverrides": {
                    "reportUnusedFunction": "none"
                },
                // Use ruff for formatting
                "[python]": {
                    "editor.formatOnSave": true,
                    "editor.defaultFormatter": "charliermarsh.ruff",
                    "editor.codeActionsOnSave": {
                        "source.organizeImports": "explicit"
                    }
                }
            }
        }
    }
}